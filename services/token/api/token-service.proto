syntax = "proto3";

package iam.services.token;

option go_package = "./token";

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

service TokenService {
    rpc CreateToken(CreateTokenRequest) returns (CreateTokenResponse) {
        option (google.api.http) = {
            post: "/v1/token/create"
            body: "*"
        };
    };
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
        option (google.api.http) = {
            post: "/v1/token/refresh"
            body: "*"
        };
    };
    rpc DeleteToken(DeleteTokenRequest) returns (DeleteTokenResponse) {
        option (google.api.http) = {
            post: "/v1/token/delete"
            body: "*"
        };
    };
    rpc ExchangeToken(ExchangeTokenRequest) returns (ExchangeTokenResponse) {
        option (google.api.http) = {
            post: "/v1/token/exchange"
            body: "*"
        };
    };
}

message CreateTokenRequest {
    string ssh_pub_key = 1;
}

message CreateTokenResponse {
    string token = 1;
    google.protobuf.Timestamp expires_at = 2;
}

message RefreshTokenRequest {
    string token = 1;
}

message RefreshTokenResponse {
    google.protobuf.Timestamp expires_at = 1;
}

message DeleteTokenRequest {
    string token = 1;
}

message DeleteTokenResponse {}

message ExchangeTokenRequest {
    string token = 1;
}

message ExchangeTokenResponse {
    string account_id = 1;
}
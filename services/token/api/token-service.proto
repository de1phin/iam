syntax = "proto3";

package iam.services.token;

option go_package = "./token";

import "google/api/annotations.proto";

service TokenService {
    rpc GenerateToken(GenerateTokenRequest) returns (GenerateTokenResponse) {
        option (google.api.http) = {
            post: "/v1/token/generate"
            body: "*"
        };
    };
    rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {
        option (google.api.http) = {
            post: "/v1/token/refresh"
            body: "*"
        };
    };
    rpc DeleteToken(RemoveTokenRequest) returns (RemoveTokenResponse) {
        option (google.api.http) = {
            post: "/v1/token/delete"
            body: "*"
        };
    };
    rpc CheckToken(CheckTokenRequest) returns (CheckTokenResponse) {
        option (google.api.http) = {
            post: "/v1/token/check"
            body: "*"
        };
    };
}

enum TokenStatus {
    UNDEFINED = 0;
    VALID = 1;
}
message Token {
    string token = 1;
    TokenStatus status = 2;
}

message GenerateTokenRequest {
    string ssh_pub_key = 1;
}

message GenerateTokenResponse {
    Token token = 1;
}

message RefreshTokenRequest {
    bytes token = 1;
}

message RefreshTokenResponse {
    Token token = 1;
}

message RemoveTokenRequest {
    bytes ssh_key = 1;
}

message RemoveTokenResponse {}

message CheckTokenRequest {
    Token token = 1;
}

message CheckTokenResponse {
    string user_id = 1;
    TokenStatus status = 2;
}